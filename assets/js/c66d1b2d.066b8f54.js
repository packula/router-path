"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[850],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(a),m=n,d=c["".concat(p,".").concat(m)]||c[m]||h[m]||l;return a?r.createElement(d,i(i({ref:t},u),{},{components:a})):r.createElement(d,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),n=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(7462),n=a(7294),l=a(6010),i=a(2389),o=a(7392),p=a(7094),s=a(2466);const u="tabList__CuJ",h="tabItem_LNqP";function c(e){var t,a;const{lazy:i,block:c,defaultValue:m,values:d,groupId:f,className:g}=e,v=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=d?d:v.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),y=(0,o.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(a=v.find((e=>e.props.default)))?void 0:a.props.value)?t:v[0].props.value;if(null!==k&&!b.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:P,setTabGroupChoices:w}=(0,p.U)(),[N,T]=(0,n.useState)(k),O=[],{blockElementScrollPositionUntilNextRender:C}=(0,s.o5)();if(null!=f){const e=P[f];null!=e&&e!==N&&b.some((t=>t.value===e))&&T(e)}const A=e=>{const t=e.currentTarget,a=O.indexOf(t),r=b[a].value;r!==N&&(C(t),T(r),null!=f&&w(f,String(r)))},E=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var r;const t=O.indexOf(e.currentTarget)+1;a=null!=(r=O[t])?r:O[0];break}case"ArrowLeft":{var n;const t=O.indexOf(e.currentTarget)-1;a=null!=(n=O[t])?n:O[O.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},g)},b.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:E,onFocus:A,onClick:A},i,{className:(0,l.Z)("tabs__item",h,null==i?void 0:i.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),i?(0,n.cloneElement)(v.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,i.Z)();return n.createElement(c,(0,r.Z)({key:String(t)},e))}},2186:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));a(5162),a(5488);const l={id:"PathPattern",title:"PathPattern",sidebar_label:"PathPattern",hide_title:!0},i="PathPattern",o={unversionedId:"api/type/PathPattern",id:"api/type/PathPattern",title:"PathPattern",description:"The PathPattern interface is implemented by the [path pattern] objects that",source:"@site/../docs/api/type/PathPattern.mdx",sourceDirName:"api/type",slug:"/api/type/PathPattern",permalink:"/router-path/api/type/PathPattern",draft:!1,editUrl:"https://github.com/snout-router/router-path/edit/main/website/../docs/api/type/PathPattern.mdx",tags:[],version:"current",frontMatter:{id:"PathPattern",title:"PathPattern",sidebar_label:"PathPattern",hide_title:!0},sidebar:"docs",previous:{title:"ParamOrString",permalink:"/router-path/api/type/ParamOrString"}},p={},s=[{value:"Methods",id:"methods",level:2},{value:"<code>build</code>",id:"method-build",level:3},{value:"Parameters",id:"method-build-parameters",level:4},{value:"Return value",id:"method-build-return-value",level:4},{value:"<code>match</code>",id:"method-match",level:3},{value:"Parameters",id:"method-match-parameters",level:4},{value:"Return value",id:"method-match-return-value",level:4},{value:"<code>test</code>",id:"method-test",level:3},{value:"Parameters",id:"method-test-parameters",level:4},{value:"Return value",id:"method-test-return-value",level:4},{value:"Type variables",id:"type-variables",level:2},{value:"<code>Params</code>",id:"type-variable-params",level:3}],u={toc:s};function h(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"pathpattern"},(0,n.kt)("inlineCode",{parentName:"h1"},"PathPattern")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"PathPattern")," interface is implemented by the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/guides/path-patterns"},"path pattern")," objects that\nare created when using the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/api/path"},(0,n.kt)("inlineCode",{parentName:"a"},"path"))," function."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"method-build"},(0,n.kt)("inlineCode",{parentName:"h3"},"build")),(0,n.kt)("p",null,"Build a path."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"function build(args: { [paramName: string]: any }): string;\n")),(0,n.kt)("h4",{id:"method-build-parameters"},"Parameters"),(0,n.kt)("p",null,"Accepts a single argument - an object containing the arguments for each route\nparameter."),(0,n.kt)("p",null,"The keys of the ",(0,n.kt)("inlineCode",{parentName:"p"},"args")," object must match the names of the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/guides/path-patterns"},"path pattern"),"'s route\nparameters. The values must also be of the correct type for each parameter. When\na parameter accepts ",(0,n.kt)("inlineCode",{parentName:"p"},"undefined")," arguments, omitting the argument is also\nallowed."),(0,n.kt)("h4",{id:"method-build-return-value"},"Return value"),(0,n.kt)("p",null,"A path string matching the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/guides/path-patterns"},"path pattern"),", with each of the parameters filled\nwith a formatted version of the supplied argument."),(0,n.kt)("h3",{id:"method-match"},(0,n.kt)("inlineCode",{parentName:"h3"},"match")),(0,n.kt)("p",null,"Check if a path matches the pattern, and return arguments if the match is\nsuccessful."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"function match(path: string): { [paramName: string]: any } | undefined;\n")),(0,n.kt)("h4",{id:"method-match-parameters"},"Parameters"),(0,n.kt)("p",null,"Accepts a single argument - the path string to match against."),(0,n.kt)("h4",{id:"method-match-return-value"},"Return value"),(0,n.kt)("p",null,"If the supplied path string matches the pattern, ",(0,n.kt)("inlineCode",{parentName:"p"},"match")," will return an object\nwith keys matching the names of the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/guides/path-patterns"},"path pattern"),"'s route parameters. The\nstring arguments will be parsed into values of the appropriate type for each\nparameter."),(0,n.kt)("p",null,"If the path does not match the pattern, ",(0,n.kt)("inlineCode",{parentName:"p"},"match")," will return ",(0,n.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,n.kt)("h3",{id:"method-test"},(0,n.kt)("inlineCode",{parentName:"h3"},"test")),(0,n.kt)("p",null,"Check if a path matches the pattern."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"function test(path: string): boolean;\n")),(0,n.kt)("h4",{id:"method-test-parameters"},"Parameters"),(0,n.kt)("p",null,"Accepts a single argument - the path string to match against."),(0,n.kt)("h4",{id:"method-test-return-value"},"Return value"),(0,n.kt)("p",null,"A boolean value indicating whether the path matched the pattern or not."),(0,n.kt)("h2",{id:"type-variables"},"Type variables"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"PathPattern")," type is a ",(0,n.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/2/generics.html"},"generic")," type:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"PathPattern<Params extends Array<Param<string, any>>>\n")),(0,n.kt)("h3",{id:"type-variable-params"},(0,n.kt)("inlineCode",{parentName:"h3"},"Params")),(0,n.kt)("p",null,"The type of parameters contained in the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/guides/path-patterns"},"path pattern"),"."),(0,n.kt)("p",null,"Typically, you would not need to manually specify this type variable, as the\nparameter types are automatically inferred when calling the ",(0,n.kt)("a",{parentName:"p",href:"/router-path/api/path"},(0,n.kt)("inlineCode",{parentName:"a"},"path"))," function to\ncreate path patterns:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},'import { path } from "@snout/router-path";\n\nconst user = path`/user/${"id"}`; // user has a type of PathPattern<[Param<\'id\', string>]>\n')),(0,n.kt)("admonition",{title:"Try me!",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzAQxgCwL5wGZQiOAcgAEBnAOwgFcYB6PGgUygFoV1CAoTgYwnNLwqpZnAC8cdmgAGtYc1oASBIWAATQhmlxatOPKhw0yUnGRwYATzCM4EbHAAKqNM5gxm5ADwBtZ1GQQL1UNABo4QShgcgBzAD4AXTigA"},"Try this example in the TypeScript Playground"))))}h.isMDXComponent=!0}}]);